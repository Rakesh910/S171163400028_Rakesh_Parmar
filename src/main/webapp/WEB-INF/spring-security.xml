<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans.xsd 
      http://www.springframework.org/schema/context
 	  http://www.springframework.org/schema/context/spring-context-4.1.xsd 
      http://www.springframework.org/schema/security  
      http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<http pattern="/resources/**" security="none"></http>
	<http auto-config="true">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/AdminPages/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/UserPages/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		
		<access-denied-handler error-page="/exception"/>
		<form-login login-page="/loginPage" default-target-url="/"
			username-parameter="j_username" 
			password-parameter="j_password"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/loginPage?authfailed" />
			<logout logout-url="/j_spring_security_logout" logout-success-url="/" invalidate-session="true"/>
		<csrf disabled="true" />
	</http>
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="myDataSource"
				users-by-username-query="select user_email,user_password,enabled from UserDetail where user_email=?"
				authorities-by-username-query="select u1.user_email,u2.user_role from UserDetail u1, UserRole  u2 where 
						u1.user_role_id = u2.user_role_id and u1.user_email=?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>  
